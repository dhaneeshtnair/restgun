version: '2.1'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    container_name: es01
    environment:
      - node.name=es01
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - esnet
    healthcheck:
      test: curl -f http://es01:9200
      interval: 30s
      timeout: 10s
      retries: 25

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    container_name: es02
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata02:/usr/share/elasticsearch/data
    networks:
      - esnet

  kibana:
    image: docker.elastic.co/kibana/kibana:7.3.0
    depends_on:
      es01:
        condition: service_healthy
    environment:
      ELASTICSEARCH_HOSTS: http://es01:9200
    volumes:
      - kibanadata:/usr/share/elasticsearch/kibana/data
    ports:
      - 5601:5601
    networks:
      - esnet

  webapp:
    build:
      context: .
      args:
        - ELASTICSEARCH_URL=http://es01:9200/
    environment:
      ELASTICSEARCH_URL: http://es01:9200
    depends_on:
      es01:
        condition: service_healthy
    ports:
      - 44444:44444
    networks:
      - esnet

volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local
  kibanadata:
    driver: local

networks:
  esnet:
